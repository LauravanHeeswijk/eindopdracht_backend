# --- App & uploads ---
spring.application.name=boeken-api
server.port=8081
my.upload_location2=file_uploads

# =========================
# DEV / H2 database-instelling
# =========================
spring.datasource.url=jdbc:h2:mem:booksdb;MODE=LEGACY;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# data.sql na JPA laten draaien (seed authors/categories/users)
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# H2 console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# =========================
# JWT
# =========================
# Gebruik in prod een env var: export JWT_SECRET="...minimaal 32 tekens..."
jwt.secret=${JWT_SECRET:CHANGE_ME_TO_A_LONG_RANDOM_SECRET_32+_CHARS}
jwt.expiration-ms=864000000

# =========================
# PROD / LOCAL PostgreSQL (later)
# =========================
# spring.datasource.url=jdbc:postgresql://localhost:5432/boeken
# spring.datasource.username=postgres
# spring.datasource.password=postgres
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.show-sql=false
# spring.sql.init.mode=never
# spring.jpa.defer-datasource-initialization=false

# Overige
spring.jpa.open-in-view=true
logging.level.org.springframework=INFO
